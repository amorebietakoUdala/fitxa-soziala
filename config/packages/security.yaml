security:
  # https://symfony.com/doc/current/security/authenticator_manager.html
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#c-hashing-passwords
  password_hashers:
    legacy:
      algorithm: sodium

    App\Entity\User:
      algorithm: bcrypt
      migrate_from:
        - legacy

    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    amreu_user_provider:
      entity:
        class: App\Entity\User
        property: username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: amreu_user_provider

      custom_authenticators:
          - amreu.login.form.passportauthenticator
      entry_point: amreu.login.form.passportauthenticator

      logout:
          path: user_security_logout
          # where to redirect after logout
          # target: app_any_route
      remember_me:
        secret: "%kernel.secret%"
        lifetime: 2592000  

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: /[es|eu]/login, roles: PUBLIC_ACCESS }
    - { path: /[es|eu]/admin, roles: ROLE_ADMIN }
    - { path: ^((?!login).)*$, roles: IS_AUTHENTICATED_FULLY }

